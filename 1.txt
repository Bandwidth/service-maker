
> service-maker@2.0.0 test c:\Users\rpoduval\Documents\nodejs_code\service-maker
> grunt

[4mRunning "jshint:src" (jshint) task[24m
[32m>> [39m7 files lint free.

[4mRunning "jshint:test" (jshint) task[24m
[32m>> [39m6 files lint free.

[4mRunning "jscs:src" (jscs) task[24m
[32m>> [39m13 files without code style errors.

[4mRunning "mochaIstanbul:coverage" (mochaIstanbul) task[24m
{ [Error: Cannot find module '../build/Release/bson'] code: 'MODULE_NOT_FOUND' }
{ [Error: Cannot find module '../build/Release/bson'] code: 'MODULE_NOT_FOUND' }


  The Instance model
    initialized with all valid parameters, state - running
      âˆš returns an Instance object
    initialized with all valid parameters, state - pending
      âˆš returns an Instance object
    initialized with invalid uri
      âˆš fails
    initialized with invalid state
      âˆš fails
    initialized with id missing
      âˆš fails
    initialized with using an array instead of string
      âˆš fails
    initialized with some parameters null
      âˆš fails
    initialized with type missing
      âˆš returns an Instance object
    initialized with some missing parameters
      âˆš fails
    initialized with all missing parameters
      âˆš fails
    initialized with adding properties that don't exist
      âˆš fails

  The Rest plugin
    âˆš is a Hapi plugin
    when registered
      1) provides the '/' route
    creating a new instance
      with valid parameters passed
        2) creates the instance and returns the canonical uri
      with no parameters passed
        âˆš creates the instance and returns the canonical uri
      with invalid parameter(s) passed
        âˆš returns an error with statusCode 400
    fails in creating a new instance
      when the credentials aren't properly configured
        3) returns an error with statusCode 500
      with an ami that doesn't exist
        4) returns an error with statusCode 400
      with a type that doesn't exist
        âˆš returns an error with statusCode 400
    when there is a problem with the database connection
      5) returns an internal server error with status code 500
    getting an instance
      with an invalid instance id
        6) shows the instance does not exist
      with a valid instance
        âˆš gets the instance of the requsted id
      from a cached instance
        âˆš gets a cached version of the instance
      which is in ready state
        âˆš gets the instance of the requsted id
      when awsAdapter encounters an error
        âˆš returns a 500 error
    querying for instances
      with a valid type
        7) returns an array of instances with the given type
      with an invalid instance by sending non-exisitng Instance Id and type
        âˆš returns an empty array of instances
      with a valid ID
        âˆš returns an instance with requested id
      with a valid AMI
        âˆš returns an array of instances with requested ami
      with state=pending
        âˆš returns an array of instances which are in a pending state
      with invalid URI
        âˆš returns an empty array of intsances
      with multiple values for a parameter
        âˆš fails and returns a Bad Request
    encountering an internal error
      failing to find an instance for specified instanceId
        8) fails
      failing to find all instances
        âˆš fails
    updating a created instance
      setting the state of a created instance to terminated
        when the instance is valid
          9) terminateInstances is called with the correct parameters
          10) the status is set to terminated
        when the instance ID doesn't exist
          âˆš a 404 error is thrown
        when the payload is malformed
          âˆš a 400 error is thrown
        when two requests are made simultaneously
          âˆš one succeeds while the other fails
        when there is an AWS error
          âˆš terminateInstances is called with the instance ID
          âˆš returns the instance with state set to terminating
          âˆš returns the instance with state set to failed
        when the connection to the database fails
          11) throws a 500 error
        when the database completely fails after terminateInstances has run
          12) "before all" hook
        when the database fails after terminateInstances has run, but then recovers
          13) terminateInstances is called with the instance ID
          14) updateInstance is called with the correct parameters the second time
          15) updateInstance is called with the correct parameters the third time
          16) getInstance is called with the correct parameters the second time
          17) changes the state to failed
        when the getInstance fails after the second updateInstance fails
          18) terminateInstances is called with the instance ID
          19) updateInstance is called with the correct parameters the second time
          20) getInstance is called with the correct parameters the second time
          21) leaves the state unchanged(stopping)
        when the database and terminateInstances fail
          22) terminateInstances is called with the instance ID
          23) getInstance is called with the correct parameters the second time
          24) leaves the state unchanged(terminating)
      setting the state of a created instance to stopped
        when the instance is valid
          âˆš stopInstances is called with the correct parameters
          âˆš the status is set to stopped
        when the instance ID doesn't exist
          âˆš a 404 error is thrown
        when the payload is malformed
          âˆš a 400 error is thrown
        when two requests are made simultaneously
          âˆš one succeeds while the other fails
        when there is an AWS error
          âˆš returns the instance with state set to stopping
          âˆš then updates the instance state set to failed
        when the connection to the database fails
          25) throws a 500 error
        when the database completely fails after stopInstances has run
          26) updateInstance is called with the correct parameters the second time
          27) stopInstances is called with the instance ID
          28) leaves the state unchanged(stopping)
        when the database fails after stopInstances has run, but then recovers
          29) stopInstances is called with the instance ID
          30) updateInstance is called with the correct parameters the second time
          31) updateInstance is called with the correct parameters the third time
          32) getInstance is called with the correct parameters the second time
          33) leaves the state unchanged(stopping)
        when the getInstance fails after the second updateInstance fails
          34) updateInstance is called with the correct parameters the second time
          35) stopInstances is called with the instance ID
          36) getInstance is called with the correct parameters the second time
          37) leaves the state unchanged(stopping)
        when the database and stopInstances completely fail
          38) stopInstances is called with the instance ID
          39) getInstance is called with the correct parameters the second time
          40) leaves the state unchanged(stopping)
      setting the status of an instance to a state not handled by update
        âˆš throws an error
        âˆš leaves the instance unmodified
    creating awsAdapter object when the options passed are invalid
      41) fails
    Deleting an instance
SOme errError: child "instances" fails because ["instances" must be an object]
      with an invalid instance id
        42) shows the instance does not exist
      with a valid instance id
        âˆš returns the instance state with state set to terminating
        âˆš status is updated to terminated
      when there is a AWS error 
        âˆš returns the instance state with state set to terminating
        âˆš then updates the instance state set to failed
      when the connection to the database fails
        âˆš returns a 500 error
      when the database fails after terminateInstances has run
        âˆš terminateInstances is called with instance id
        âˆš leaves the state unchanged (terminating)
      when the database fails after terminateInstances has run, but then recovers
        âˆš terminateInstances is called with the instance ID
        âˆš updateInstance is called with the correct parameters the second time
        âˆš updateInstance is called with the correct parameters the third time
        âˆš getInstance is called with the correct parameters the second time
        âˆš changes the state to failed
      when the getInstance fails after the second updateInstance fails
        âˆš terminateInstances is called with the instance ID
        âˆš updateInstance is called with the correct parameters the second time
        âˆš getInstance is called with the correct parameters
        âˆš leaves the state unchanged(stopping)
    fails to create a Database for Cache
GFofdsfsdFundefined
SOme errError: Simulated Failure.
      43) throws an error

  The server
    âˆš registers the Rest plugin

  The AwsAdapter class 
    trying to create a new instance
      with valid parameters
        âˆš creates the security group
        âˆš adds rules for SSH to the security group
        âˆš and returns a new instance with the ami and type provided
      with a security group name that already exists
        âˆš finds the group already created
        âˆš checks that it isn't modified
        âˆš and returns a new instance with the ami and type provided
      when an error occurs with creating the security group
        âˆš expects an error
        âˆš doesn't create a new instance
        âˆš doesn't try adding rules to the security group
      with invalid ami
        âˆš throws an InvalidAMIID.Malformed error
      with invalid type
        âˆš throws an InvalidParameterValue
    gets properties of given instance
      âˆš gets properties of the given instance
    gets properties of invalid instance
      âˆš fails
    gets the IP Address of the instance
      âˆš gets a valid IP address
    Trying to create awsAdapter Instance
      with missing parameters
        âˆš fails to create an object
      with invalid parameters
        âˆš fails to create an object
    terminating an instance
      when the instance is running
        âˆš gets the details of the instance, sets the state on the AWS console to terminated
        âˆš starts terminating the instance
        âˆš waits for the instance to be terminated
        âˆš checks the instance is terminated
      when the instance has already been terminated (doesn't exist)
        âˆš throws an error
      when waitFor times out
        âˆš gets the instance details
        âˆš starts terminating the instance
        âˆš times out
    stopping an instance
      when the instance is running
        âˆš gets the details of the instance, sets the state on the AWS console to stopped
        âˆš initiates stopping the instance
        âˆš waits for the instance to be stopped
        âˆš checks the instance has been stopped
      when the instance doesn't exist
        âˆš throws an error
      when waitFor times out
        âˆš gets the instance details
        âˆš starts terminating the instance
        âˆš times out
    Check Instance Status
      and is able to ssh
        âˆš updates the state and uri of the instance
      faces an error while updating an instance
        âˆš throws an error
      faces an error while checking ssh Status
        âˆš updates the state and uri of the instance
      faces an error while checking ssh Status
        updating instance fails as well
          âˆš fails to update the state and uri of the instance
        and tries to update an instance which has been modified
          âˆš does not update the current instance status
        and an out-of-band update has occurred
          âˆš fails to update as it has wrong revision number
      is able to ssh & tries to update an instance which has already been modified
        âˆš does not update the current instance status
      is not able to ssh
        âˆš gets the created instance
      is not able to ssh and an out-of-band update occurs
        âˆš gets the update instance

  The InstanceAdapter class 
    âˆš is immutable
    creating a new instance
      âˆš returns a new instance with default values
    creating a new instance, passing ami and type
      âˆš returns a new instance with default values
    Getting an instance
      with a valid instanceId
        âˆš gets a valid instance
      with a non-existent instanceId
        âˆš fails
    Querying for instances
      with valid parameters
        âˆš receives an array of instances
      with no parameters
        âˆš receives an array of all instances
      with a query that doesn't match any instance
        âˆš returns an empty array
    The mapper faces an internal error
      when the mapper fails to create a new model
        âˆš throws an error
      when the mapper fails to find an instance
        âˆš throws an error
      when the mapper fails to find an instance for the queried parameters
        âˆš throws an error
    updating an already created instance
      âˆš updates the instance and sets state to failed

  The SSH Adapter Class
    Checks if it is possible to ssh
      once the status checks have passed
        âˆš returns that it is possible to ssh
      as soon as instance is created
        âˆš is not possible to ssh currently
      when system checks have failed
        âˆš it returns an error
      when there is insufficient-data
        âˆš it returns an error
    Starts ssh Polling
      when system checks have passed
        âˆš is possible to ssh now
      when it is still performing system checks
        âˆš is possible to ssh eventually
      when system checks have failed
        âˆš it throws an error
      when system checks detects insufficient-data
        âˆš it throws an error
      when ssh polling encounters a timeout
        âˆš it throws an error
    Aws faces an internal error
      âˆš encounters an error


  121 passing (3s)
  43 failing

  1) The Rest plugin when registered provides the '/' route:

      status
      + expected - actual

      -404
      +200
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:54:46

  2) The Rest plugin creating a new instance with valid parameters passed creates the instance and returns the canonical uri:

      status
      + expected - actual

      -404
      +201
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:100:47
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  3) The Rest plugin fails in creating a new instance when the credentials aren't properly configured returns an error with statusCode 500:

      status
      + expected - actual

      -404
      +500
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:179:44
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  4) The Rest plugin fails in creating a new instance with an ami that doesn't exist returns an error with statusCode 400:

      AssertionError: expected 'The AMI entered does not exist. Ensure it is of the foami-xxxxxx.' to equal 'The AMI entered does not exist. Ensure it is of the form ami-xxxxxx.'
      + expected - actual

      -The AMI entered does not exist. Ensure it is of the foami-xxxxxx.
      +The AMI entered does not exist. Ensure it is of the form ami-xxxxxx.
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:210:10
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  5) The Rest plugin when there is a problem with the database connection returns an internal server error with status code 500:
     AssertionError: expected undefined to equal 'An internal server error occurred'
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:273:41
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  6) The Rest plugin getting an instance with an invalid instance id shows the instance does not exist:
     TypeError: Cannot read property '0' of undefined
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:322:37)

  7) The Rest plugin querying for instances with a valid type returns an array of instances with the given type:

      status
      + expected - actual

      -404
      +200
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:527:46
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  8) The Rest plugin encountering an internal error failing to find an instance for specified instanceId fails:

      AssertionError: expected 404 to equal 500
      + expected - actual

      -404
      +500
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:755:34)

  9) The Rest plugin updating a created instance setting the state of a created instance to terminated when the instance is valid terminateInstances is called with the correct parameters:
     TypeError: Cannot read property '0' of undefined
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:858:45)

  10) The Rest plugin updating a created instance setting the state of a created instance to terminated when the instance is valid the status is set to terminated:

      AssertionError: expected 'pending' to equal 'terminated'
      + expected - actual

      -pending
      +terminated
      
      at c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:867:33
      at bound (domain.js:254:14)
      at runBound (domain.js:267:12)

  11) The Rest plugin updating a created instance setting the state of a created instance to terminated when the connection to the database fails throws a 500 error:

      AssertionError: expected 404 to equal 500
      + expected - actual

      -404
      +500
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1079:35)

  12) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database completely fails after terminateInstances has run "before all" hook:
     Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.
  

  13) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database fails after terminateInstances has run, but then recovers terminateInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1254:45)

  14) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database fails after terminateInstances has run, but then recovers updateInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1258:34)

  15) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database fails after terminateInstances has run, but then recovers updateInstance is called with the correct parameters the third time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1266:33)

  16) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database fails after terminateInstances has run, but then recovers getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1274:30)

  17) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database fails after terminateInstances has run, but then recovers changes the state to failed:

      AssertionError: expected 0 to equal 1
      + expected - actual

      -0
      +1
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1278:35)

  18) The Rest plugin updating a created instance setting the state of a created instance to terminated when the getInstance fails after the second updateInstance fails terminateInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1357:45)

  19) The Rest plugin updating a created instance setting the state of a created instance to terminated when the getInstance fails after the second updateInstance fails updateInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1361:34)

  20) The Rest plugin updating a created instance setting the state of a created instance to terminated when the getInstance fails after the second updateInstance fails getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1369:30)

  21) The Rest plugin updating a created instance setting the state of a created instance to terminated when the getInstance fails after the second updateInstance fails leaves the state unchanged(stopping):

      AssertionError: expected 0 to equal 1
      + expected - actual

      -0
      +1
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1373:35)

  22) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database and terminateInstances fail terminateInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1428:45)

  23) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database and terminateInstances fail getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1432:30)

  24) The Rest plugin updating a created instance setting the state of a created instance to terminated when the database and terminateInstances fail leaves the state unchanged(terminating):
     AssertionError: expected undefined to equal 'terminating'
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1436:39)

  25) The Rest plugin updating a created instance setting the state of a created instance to stopped when the connection to the database fails throws a 500 error:

      AssertionError: expected 404 to equal 500
      + expected - actual

      -404
      +500
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1718:35)

  26) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database completely fails after stopInstances has run updateInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1788:34)

  27) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database completely fails after stopInstances has run stopInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1796:40)

  28) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database completely fails after stopInstances has run leaves the state unchanged(stopping):

      AssertionError: expected 0 to equal 2
      + expected - actual

      -0
      +2
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1800:38)

  29) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database fails after stopInstances has run, but then recovers stopInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1898:40)

  30) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database fails after stopInstances has run, but then recovers updateInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1902:34)

  31) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database fails after stopInstances has run, but then recovers updateInstance is called with the correct parameters the third time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1910:33)

  32) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database fails after stopInstances has run, but then recovers getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1918:30)

  33) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database fails after stopInstances has run, but then recovers leaves the state unchanged(stopping):

      AssertionError: expected 0 to equal 1
      + expected - actual

      -0
      +1
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:1922:35)

  34) The Rest plugin updating a created instance setting the state of a created instance to stopped when the getInstance fails after the second updateInstance fails updateInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2001:34)

  35) The Rest plugin updating a created instance setting the state of a created instance to stopped when the getInstance fails after the second updateInstance fails stopInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2009:40)

  36) The Rest plugin updating a created instance setting the state of a created instance to stopped when the getInstance fails after the second updateInstance fails getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2013:30)

  37) The Rest plugin updating a created instance setting the state of a created instance to stopped when the getInstance fails after the second updateInstance fails leaves the state unchanged(stopping):

      AssertionError: expected 0 to equal 1
      + expected - actual

      -0
      +1
      
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2017:35)

  38) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database and stopInstances completely fail stopInstances is called with the instance ID:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2072:40)

  39) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database and stopInstances completely fail getInstance is called with the correct parameters the second time:
     TypeError: Cannot read property 'args' of null
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2076:30)

  40) The Rest plugin updating a created instance setting the state of a created instance to stopped when the database and stopInstances completely fail leaves the state unchanged(stopping):
     AssertionError: expected undefined to equal 'stopping'
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2080:39)

  41) The Rest plugin creating awsAdapter object when the options passed are invalid fails:
     AssertionError: expected undefined to be an instance of Error
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2149:38)

  42) The Rest plugin Deleting an instance with an invalid instance id shows the instance does not exist:
     TypeError: Cannot read property '0' of undefined
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2196:37)

  43) The Rest plugin fails to create a Database for Cache throws an error:
     AssertionError: expected undefined to be an instance of Error
      at Context.<anonymous> (c:\Users\rpoduval\Documents\nodejs_code\service-maker\test\unit\plugins\rest_spec.js:2599:38)




=============================== Coverage summary ===============================
Statements   : 94.48% ( 308/326 )
Branches     : 91.55% ( 65/71 )
Functions    : 93.18% ( 82/88 )
Lines        : 94.48% ( 308/326 )
================================================================================
[31m>> [39m
[33mWarning: Task "mochaIstanbul:coverage" failed. Use --force to continue.[39m

[31mAborted due to warnings.[39m
